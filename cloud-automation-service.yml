swagger: '2.0'
info:
  description: The purpose of this service is to talk to the Catalog and handle the ProActive Service layer.
  version: '1.0'
  title: ProActive Cloud Automation Service API
  license:
    name: ''
    url: 'https://github.com/ow2-proactive/cloud-automation-service/blob/master/LICENSE'
host: 'localhost:8080'
basePath: /cloud-automation-service
tags:
  - name: service-instance-rest
    description: Service Instance Rest
  - name: resource-manager-rest
    description: Resource Manager Rest
  - name: workflow-catalog-rest
    description: Workflow Catalog Rest
  - name: basic-error-controller
    description: Basic Error Controller
  - name: variables-rest
    description: Variables Rest
paths:
  /catalog/delete_services:
    get:
      tags:
        - workflow-catalog-rest
      summary: listAlldeletes
      operationId: listAlldeletesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sessionid
          in: header
          description: sessionid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/services:
    get:
      tags:
        - workflow-catalog-rest
      summary: listAllServices
      operationId: listAllServicesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sessionid
          in: header
          description: sessionid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /rm/nodesources:
    get:
      tags:
        - resource-manager-rest
      summary: listOfFieldsOfExistingNodeSources
      operationId: listOfFieldsOfExistingNodeSourcesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sessionid
          in: header
          description: sessionid
          required: true
          type: string
        - in: body
          name: fields
          description: fields
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /serviceInstances:
    get:
      tags:
        - service-instance-rest
      summary: getRunningServiceInstances
      operationId: getRunningServiceInstancesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - service-instance-rest
      summary: createRunningServiceInstances
      operationId: createRunningServiceInstancesUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: serviceInstanceJson
          description: serviceInstanceJson
          required: true
          schema:
            type: string
        - name: sessionid
          in: header
          description: sessionid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - service-instance-rest
      summary: deleteRunningServiceInstances
      operationId: deleteRunningServiceInstancesUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: serviceInstanceJson
          description: serviceInstanceJson
          required: true
          schema:
            type: string
        - name: sessionid
          in: header
          description: sessionid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /variables:
    post:
      tags:
        - variables-rest
      summary: createVariable
      operationId: createVariableUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: key
          in: query
          description: key
          required: true
          type: string
        - in: body
          name: variableContent
          description: variableContent
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/variables/{key}':
    get:
      tags:
        - variables-rest
      summary: getVariable
      operationId: getVariableUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: key
          in: path
          description: key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - variables-rest
      summary: updateVariable
      operationId: updateVariableUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: key
          in: path
          description: key
          required: true
          type: string
        - in: body
          name: variableContent
          description: variableContent
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - variables-rest
      summary: deleteVariable
      operationId: deleteVariableUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: key
          in: path
          description: key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
  View:
    type: object
    properties:
      contentType:
        type: string
